package NegozioPackage.GUI;

import NegozioPackage.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Iterator;

public class InserimentoElementiMagazzino extends JFrame implements ObserverMagazzino {
    private JPanel mainPanel;
    private JPanel formElementiPanel;
    private JPanel bottoniPanel;
    private JPanel listaPanel;
    private JList<OggettoImmagazzinabile> listaMagazzino;
    private JScrollPane listScoroll;
    private JButton inserisciButton;
    private JButton creaPacchettoButton;
    private JLabel titoloLista;
    private JPanel formElemento;
    private JTextField nomeElemento;
    private JLabel nomeElementoLabel;
    private JLabel descrizioneElementoLabel;
    private JTextField descrizioneElemento;
    private JLabel prezzoElementoLabel;
    private JSpinner giacenzaElemento;
    private JLabel giacenzaElementoLabel;
    private JButton ricercaPrezziLimiteButton;
    private JButton ricercaGiacenzeLimiteButton;
    private JButton rimuoviElementoButton;
    private JLabel InserisciElementoLabel;
    private JTextField prezzoElemento;
    private JPanel ricercaPanel;
    private JButton creaInterfacciaUtenteButton;

    private int codiceArticolo;
    private Warehouse magazzino;
    private DefaultListModel<OggettoImmagazzinabile> listModelMagazzino;


    public InserimentoElementiMagazzino() {
        super("Gestione Magazzino");


        $$$setupUI$$$();
        magazzino = Magazzino.getInstance();
        magazzino.addObserver(this);
        codiceArticolo = 0;

        add(mainPanel);
        giacenzaElemento.setModel(new SpinnerNumberModel(1, 1, 1000, 1));
        ricercaGiacenzeLimiteButton.setActionCommand("G");
        ricercaPrezziLimiteButton.setActionCommand("P");

        inserisciButton.addActionListener(new AscoltaInserisci());
        rimuoviElementoButton.addActionListener(new AscoltaRimuovi());
        creaPacchettoButton.addActionListener(new AscoltaCreaPacchetto());
        ricercaPrezziLimiteButton.addActionListener(new AscoltaBottoniRicerca());
        ricercaGiacenzeLimiteButton.addActionListener(new AscoltaBottoniRicerca());
        creaInterfacciaUtenteButton.addActionListener(new AscoltaCreaInterfacciaUtente());

        setSize(800, 350);
        setVisible(true);
    }

    @Override
    public void update(Warehouse m) {
        Iterator<OggettoImmagazzinabile> ogg = m.getMerce();

        aggiornaModelloLista(ogg);
    }

    private void aggiornaModelloLista(Iterator<OggettoImmagazzinabile> ogg) {
        listModelMagazzino.clear();

        while (ogg.hasNext()) {
            listModelMagazzino.addElement(ogg.next());
        }

        listaMagazzino.setModel(listModelMagazzino);
        repaint();
    }

    private void createUIComponents() {
        listModelMagazzino = new DefaultListModel<>();
        listaMagazzino = new JList<>(listModelMagazzino);
        aggiornaModelloLista(Magazzino.getInstance().getMerce());
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        formElementiPanel = new JPanel();
        formElementiPanel.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(formElementiPanel, gbc);
        InserisciElementoLabel = new JLabel();
        InserisciElementoLabel.setFont(new Font(InserisciElementoLabel.getFont().getName(), InserisciElementoLabel.getFont().getStyle(), 16));
        InserisciElementoLabel.setText("Inserisci Nuovo Elemento");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        formElementiPanel.add(InserisciElementoLabel, gbc);
        formElemento = new JPanel();
        formElemento.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        formElementiPanel.add(formElemento, gbc);
        nomeElementoLabel = new JLabel();
        nomeElementoLabel.setText("Nome:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        formElemento.add(nomeElementoLabel, gbc);
        nomeElemento = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formElemento.add(nomeElemento, gbc);
        descrizioneElementoLabel = new JLabel();
        descrizioneElementoLabel.setText("Descrizione: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        formElemento.add(descrizioneElementoLabel, gbc);
        descrizioneElemento = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formElemento.add(descrizioneElemento, gbc);
        prezzoElementoLabel = new JLabel();
        prezzoElementoLabel.setText("Prezzo: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        formElemento.add(prezzoElementoLabel, gbc);
        giacenzaElementoLabel = new JLabel();
        giacenzaElementoLabel.setText("GIacenza");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        formElemento.add(giacenzaElementoLabel, gbc);
        giacenzaElemento = new JSpinner();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formElemento.add(giacenzaElemento, gbc);
        prezzoElemento = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formElemento.add(prezzoElemento, gbc);
        bottoniPanel = new JPanel();
        bottoniPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(bottoniPanel, gbc);
        inserisciButton = new JButton();
        inserisciButton.setText("Inserisici >>");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        bottoniPanel.add(inserisciButton, gbc);
        creaPacchettoButton = new JButton();
        creaPacchettoButton.setText("Crea Pacchetto");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        bottoniPanel.add(creaPacchettoButton, gbc);
        rimuoviElementoButton = new JButton();
        rimuoviElementoButton.setText("Rimuovi Elemento");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        bottoniPanel.add(rimuoviElementoButton, gbc);
        listaPanel = new JPanel();
        listaPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(listaPanel, gbc);
        listScoroll = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        listaPanel.add(listScoroll, gbc);
        listScoroll.setViewportView(listaMagazzino);
        titoloLista = new JLabel();
        titoloLista.setFont(new Font(titoloLista.getFont().getName(), titoloLista.getFont().getStyle(), 16));
        titoloLista.setText("Elementi Presenti nel Magazzino");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        listaPanel.add(titoloLista, gbc);
        ricercaPanel = new JPanel();
        ricercaPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(ricercaPanel, gbc);
        ricercaPrezziLimiteButton = new JButton();
        ricercaPrezziLimiteButton.setText("Ricerca Prezzi Limite");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        ricercaPanel.add(ricercaPrezziLimiteButton, gbc);
        ricercaGiacenzeLimiteButton = new JButton();
        ricercaGiacenzeLimiteButton.setText("Ricerca Giacenze Limite");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        ricercaPanel.add(ricercaGiacenzeLimiteButton, gbc);
        creaInterfacciaUtenteButton = new JButton();
        creaInterfacciaUtenteButton.setText("Crea Interfaccia Utente");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        ricercaPanel.add(creaInterfacciaUtenteButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }


    public class AscoltaInserisci implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            String nome = nomeElemento.getText();
            String descr = descrizioneElemento.getText();
            Double prezzo = 0.0;
            try {
                prezzo = Double.parseDouble(prezzoElemento.getText());
            } catch (Exception ex) {
                return;
            }

            if (nome.isEmpty() == false && descr.isEmpty() == false) {
                ArticoloSingolo art = new ArticoloSingolo(nome, descr, prezzo);

                int giacenza = (int) giacenzaElemento.getValue();

                codiceArticolo++;

                RegistroMagazzino elemento = new RegistroMagazzino(codiceArticolo, art, giacenza);

                magazzino.inserisciMerce(elemento);
            }


        }
    }

    public class AscoltaBottoniRicerca implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            char command = e.getActionCommand().charAt(0);
            String risultato = "";
            CercaMaxMinMagazzinoABSVisitorMagazzino visitor = null;

            switch (command) {
                case 'G':
                    visitor = new CercaMaxMinGiacenzaMagazzinoVisitorMagazzino();
                    break;
                case 'P':
                    visitor = new CercaMaxMinPrezzoMagazzinoVisitorMagazzino();
                    break;

            }
            magazzino.accettaVisitor(visitor);
            creaFraseFinestra(visitor);
        }

        private void creaFraseFinestra(CercaMaxMinMagazzinoABSVisitorMagazzino visitor) {
            new ReportRicerca(visitor.toString());
        }
    }

    public class AscoltaCreaPacchetto implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {

            int[] select = listaMagazzino.getSelectedIndices();

            boolean selezionato = select.length == 0;

            if (!selezionato) {
                Pacchetto p = new Pacchetto();
                boolean creabile = true;
                int giacenzaRichiesta = (int) giacenzaElemento.getValue();


                for (int i = 0; i < select.length; i++) {
                    int selectIndex = select[i];

                    OggettoImmagazzinabile ogg = listModelMagazzino.elementAt(selectIndex);

                    if (giacenzaRichiesta <= ogg.getQuantita()) {
                        boolean rimosso = false;

                        try {
                            p.inserisciArticolo(ogg.getOggetto());
                            rimosso = !magazzino.rimuoviMerce(selectIndex, giacenzaRichiesta);
                        } catch (Exception e1) {
                            e1.printStackTrace();
                        }

                        if (rimosso) {
                            decrementaSelezione(select);
                        }
                    } else {
                        creabile = false;
                    }

                }
                if (creabile) {
                    codiceArticolo++;
                    OggettoImmagazzinabile rm = new RegistroMagazzino(codiceArticolo, p, giacenzaRichiesta);
                    magazzino.inserisciMerce(rm);
                }
            }

        }
    }

    private void decrementaSelezione(int[] select) {
        for (int i = 0; i < select.length; i++)
            select[i]--;
    }

    public class AscoltaRimuovi implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            int[] select = listaMagazzino.getSelectedIndices();

            for (int i = 0; i < select.length; i++) {
                int selectIndex = select[i];

                OggettoImmagazzinabile ogg = listModelMagazzino.elementAt(selectIndex);

                magazzino.rimuoviElemento(ogg);

            }

        }
    }

    public class AscoltaCreaInterfacciaUtente implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            new InterfacciaUtente();

        }
    }


    public static void main(String args[]) {
        new InserimentoElementiMagazzino();
    }


}
